import mongoose from 'mongoose';

const AiSuggestionSchema = new mongoose.Schema({
  // Reference to the Report this suggestion is associated with (optional, might be general)
  reportId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Report',
    index: true,
  },
  // Reference to the User who initiated the AI request
  userId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true,
    index: true,
  },
  // The original text provided by the user for the AI action
  inputText: {
    type: String,
    required: true,
    trim: true,
  },
  // The type of AI assistance requested
  suggestionType: {
    type: String,
    required: true,
    enum: ['rephrase', 'expand', 'fixGrammar', 'summarizeBlock', 'tagBlock'], // Added block-level actions
    trim: true,
  },
  // The resulting text or data generated by the AI
  suggestionResult: {
    type: String,
    required: true,
  },
  // Flag indicating if the user accepted and used the suggestion
  accepted: {
    type: Boolean,
    default: false, // Default to not accepted
  },
  // Optional: Store metadata about the AI processing for this specific suggestion
  aiMeta: {
    modelUsed: String,
    promptTokens: Number,
    completionTokens: Number,
    totalTokens: Number,
    cost: Number,
    processedAt: Date,
  },
  // Audit timestamps managed by Mongoose
}, {
  timestamps: true // Automatically manages createdAt and updatedAt
});

// Indexes for querying suggestions by user or report
AiSuggestionSchema.index({ userId: 1, createdAt: -1 });
AiSuggestionSchema.index({ reportId: 1, createdAt: -1 });

// Ensure the model is not recompiled if it already exists
export default mongoose.models.AiSuggestion || mongoose.model('AiSuggestion', AiSuggestionSchema);